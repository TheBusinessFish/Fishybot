import os
import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.markdown import hbold

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TOKEN:
    logger.error("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é TELEGRAM_TOKEN")
    exit(1)

bot = Bot(token=TOKEN)
dp = Dispatcher()

# =====================
# –ò–ù–õ–ê–ô–ù-–ö–ù–û–ü–ö–ò
# =====================
def main_menu_buttons():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üê† –û–±–æ –º–Ω–µ", callback_data="about"),
                InlineKeyboardButton(text="üíª –£—Å–ª—É–≥–∏", callback_data="services")
            ],
            [
                InlineKeyboardButton(text="üìÇ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ", callback_data="portfolio"),
                InlineKeyboardButton(text="üîê –ü—Ä–∏–Ω—Ü–∏–ø—ã", callback_data="principles")
            ],
            [
                InlineKeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts"),
                InlineKeyboardButton(text="üí¨ FAQ", callback_data="faq")
            ]
        ]
    )

back_button = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ]
    )

start_kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üöÄ –°–¢–ê–†–¢", callback_data="start_main")]
        ]
    )

# =====================
# –¢–ï–ö–°–¢–û–í–´–ï –®–ê–ë–õ–û–ù–´
# =====================
WELCOME_TEXT = f"""
{hbold('FishyOcean Portfolio')}

{hbold('–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?')}

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –æ –º–æ–∏—Ö —É—Å–ª—É–≥–∞—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ Telegram –±–æ—Ç–æ–≤, 
–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç –∏ —É–∑–Ω–∞—Ç—å, –∫–∞–∫ —Å–æ –º–Ω–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å.
"""

MAIN_MENU_TEXT = f"""
{hbold('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')}

–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:
"""

ABOUT_TEXT = f"""
{hbold('üê† –û–±–æ –º–Ω–µ')}

–Ø - —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ Telegram –±–æ—Ç–æ–≤, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏:
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –±–æ—Ç–æ–≤
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
‚Ä¢ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –±–∏–∑–Ω–µ—Å-–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π

–ú–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:
- Python 3.11
- Aiogram 3.x
- –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞

–§–∏–ª–æ—Å–æ—Ñ–∏—è:
¬´–°–æ–∑–¥–∞—é –±–æ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ—à–∞—é—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏ –±–µ–∑ –∏–∑–ª–∏—à–µ—Å—Ç–≤¬ª
"""

SERVICES_TEXT = f"""
{hbold('üíª –£—Å–ª—É–≥–∏')}

–Ø —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –±–æ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ:
‚Ä¢ –ù–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
‚Ä¢ –ù–µ —Ç—Ä–µ–±—É—é—Ç —Å–ª–æ–∂–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
‚Ä¢ –†–µ—à–∞—é—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –±–∏–∑–Ω–µ—Å-–∑–∞–¥–∞—á–∏

–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
1. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –±–æ—Ç—ã (—Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏, –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π)
2. –ë–æ—Ç—ã-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ —Å–æ–±—ã—Ç–∏—è—Ö)
3. –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–º–æ—â–Ω–∏–∫–∏ (FAQ, –ø–æ–¥–¥–µ—Ä–∂–∫–∞)
4. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ø—É–±–ª–∏—á–Ω—ã–º–∏ API

–í–∞–∂–Ω–æ: –Ω–µ –∑–∞–Ω–∏–º–∞—é—Å—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π –±–æ—Ç–æ–≤, —Ç—Ä–µ–±—É—é—â–∏—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
"""

PORTFOLIO_TEXT = f"""
{hbold('üìÇ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ')}

1. MemeBot - –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ–º–æ–≤ –∏–∑ Reddit
   ‚Ä¢ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: Python, aiogram, Reddit API
   ‚Ä¢ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –º–µ–º—ã –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ
   ‚Ä¢ –°—Å—ã–ª–∫–∞: github.com/TheBusinessFish/telegram-meme-bot

2. Fishybot - –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ FishyOcean!
   ‚Ä¢ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: Python, aiogram
   ‚Ä¢ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
   ‚Ä¢ –°—Å—ã–ª–∫–∞: github.com/TheBusinessFish/Fishybot
"""

PRINCIPLES_TEXT = f"""
{hbold('üîê –ü—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã')}

–≠—Ç–∞–ø—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞:

1. –û–±—Å—É–∂–¥–µ–Ω–∏–µ:
   ‚Ä¢ –§–æ—Ä–º—É–ª–∏—Ä—É–µ–º –∑–∞–¥–∞—á—É –∏ –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
   ‚Ä¢ –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ä–æ–∫–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
   ‚Ä¢ –°–æ–≥–ª–∞—Å–æ–≤—ã–≤–∞–µ–º –±—é–¥–∂–µ—Ç

2. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è:
   ‚Ä¢ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –¢–ó
   ‚Ä¢ –ü–æ—ç—Ç–∞–ø–Ω–æ–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ
   ‚Ä¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

3. –ü–µ—Ä–µ–¥–∞—á–∞ —Ä–µ—à–µ–Ω–∏—è:

–í–∞—Ä–∏–∞–Ω—Ç ‚ë† (–†–∞–∑–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞):
   ‚Ä¢ –ü–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
   ‚Ä¢ –§–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
   ‚Ä¢ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
   ‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ

–í–∞—Ä–∏–∞–Ω—Ç ‚ë° (SaaS –º–æ–¥–µ–ª—å):
   ‚Ä¢ –†–∞–∑–º–µ—â–µ–Ω–∏–µ –±–æ—Ç–∞ –Ω–∞ –º–æ–∏—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö
   ‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
   ‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
   ‚Ä¢ –ï–∂–µ–º–µ—Å—è—á–Ω–∞—è –æ–ø–ª–∞—Ç–∞ –∑–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
"""

CONTACTS_TEXT = f"""
{hbold('üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã')}

–î–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:
‚Ä¢ Telegram: @FishyOcean
‚Ä¢ GitHub: github.com/TheBusinessFish

–í—Å–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã. 
–ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é email.
"""

FAQ_TEXT = f"""
{hbold('üí¨ –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã')}

{hbold('–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞?')}
‚Ä¢ –ü—Ä–æ—Å—Ç—ã–µ –±–æ—Ç—ã: –æ—Ç 5000‚ÇΩ
‚Ä¢ –°—Ä–µ–¥–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: 10000-25000‚ÇΩ
‚Ä¢ –°–ª–æ–∂–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã: –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç

{hbold('–°—Ä–æ–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏?')}
‚Ä¢ –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å—Ä–æ–∫: 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è
‚Ä¢ –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç—ã: 1-2 –Ω–µ–¥–µ–ª–∏

{hbold('–ö–∞–∫–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏?')}
‚Ä¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–¥–∞—á–µ–π
‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫ –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ (–¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–∞ ‚ë†)
"""

# =====================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î
# =====================
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        WELCOME_TEXT,
        reply_markup=start_kb,
        parse_mode="HTML"
    )

@dp.callback_query(F.data == "start_main")
async def start_main(callback: types.CallbackQuery):
    await callback.message.edit_text(
        MAIN_MENU_TEXT,
        reply_markup=main_menu_buttons(),
        parse_mode="HTML"
    )

@dp.callback_query(F.data == "back_to_main")
async def back_to_main(callback: types.CallbackQuery):
    await callback.message.edit_text(
        MAIN_MENU_TEXT,
        reply_markup=main_menu_buttons(),
        parse_mode="HTML"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤
@dp.callback_query(F.data == "about")
async def about(callback: types.CallbackQuery):
    await callback.message.edit_text(
        ABOUT_TEXT,
        reply_markup=back_button,
        parse_mode="HTML"
    )

@dp.callback_query(F.data == "services")
async def services(callback: types.CallbackQuery):
    await callback.message.edit_text(
        SERVICES_TEXT,
        reply_markup=back_button,
        parse_mode="HTML"
    )

@dp.callback_query(F.data == "portfolio")
async def portfolio(callback: types.CallbackQuery):
    await callback.message.edit_text(
        PORTFOLIO_TEXT,
        reply_markup=back_button,
        parse_mode="HTML"
    )

@dp.callback_query(F.data == "principles")
async def principles(callback: types.CallbackQuery):
    await callback.message.edit_text(
        PRINCIPLES_TEXT,
        reply_markup=back_button,
        parse_mode="HTML"
    )

@dp.callback_query(F.data == "contacts")
async def contacts(callback: types.CallbackQuery):
    await callback.message.edit_text(
        CONTACTS_TEXT,
        reply_markup=back_button,
        parse_mode="HTML"
    )

@dp.callback_query(F.data == "faq")
async def faq(callback: types.CallbackQuery):
    await callback.message.edit_text(
        FAQ_TEXT,
        reply_markup=back_button,
        parse_mode="HTML"
    )

# =====================
# –ó–ê–ü–£–°–ö –ë–û–¢–ê
# =====================
async def main():
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ FishyOcean...")
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)
    logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logger.info("–†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞")
    except Exception as e:
        logger.exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
